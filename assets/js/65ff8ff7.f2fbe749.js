"use strict";(self.webpackChunkauto_infra=self.webpackChunkauto_infra||[]).push([[655],{8105:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var r=n(7462),s=n(3366),a=(n(7294),n(3905)),i=["components"],o={slug:"RestAssuredExtent",title:"Advanced RestAssured Logging in Extent Report",author:"Bhargav Murari",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},l=void 0,u={unversionedId:"Articles/2019-06-06-RestAssured_ExtentLogging",id:"Articles/2019-06-06-RestAssured_ExtentLogging",isDocsHomePage:!1,title:"Advanced RestAssured Logging in Extent Report",description:"image",source:"@site/docs/Articles/2019-06-06-RestAssured_ExtentLogging.mdx",sourceDirName:"Articles",slug:"/Articles/RestAssuredExtent",permalink:"/home/docs/Articles/RestAssuredExtent",version:"current",frontMatter:{slug:"RestAssuredExtent",title:"Advanced RestAssured Logging in Extent Report",author:"Bhargav Murari",author_title:"Automation Test Engineer @Kongsberg Digital",tags:["Selenium","Java","Reporting"],draft:!1},sidebar:"tutorialSidebar",previous:{title:"Advanced RestAssured Logging in Allure Report",permalink:"/home/docs/Articles/RestAssuredAllure"}},p=[],g={toc:p};function c(e){var t=e.components,o=(0,s.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(155).Z})),(0,a.kt)("p",null,"Goal: Record API Request and Response using RestAssured Logging with Minimal Coding, By Decreasing the Boiler Plate code for Reporting Purposes.\nLibraries in Use:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"RestAssured"),(0,a.kt)("li",{parentName:"ol"},"ExtentReports"),(0,a.kt)("li",{parentName:"ol"},"TestNG")),(0,a.kt)("p",null,"Step1: Create a ExtentReport Class for ExtentSparkReporter class initialization."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},'public class ExtentReporterCls {\n    static ExtentReports extent;\n\n    public static ExtentReports ReportGenerator()\n    {\n        Date d = new Date();\n        SimpleDateFormat SDF = new SimpleDateFormat("yyyy-MMM-dd_HH_mm");\n\n        String path = System.getProperty("user.dir")+"\\\\HtmlReports\\\\Extent\\\\"+"ExtentReport.html";\n\n        ExtentSparkReporter ESR = new ExtentSparkReporter(path).viewConfigurer()\n                .viewOrder()\n                .as(new ViewName[] { ViewName.DASHBOARD, ViewName.TEST, ViewName.EXCEPTION,ViewName.LOG  })\n                .apply();\n        ESR.config().setReportName("Test Automation Results");\n       // ESR.config().setDocumentTitle("Test Results");\n        extent = new ExtentReports();\n        extent.attachReporter(ESR);\n        extent.setSystemInfo("Tester",System.getProperty("user.name"));\n        return extent;\n\n    }\n\n}\n')),(0,a.kt)("p",null,"Step2: Create a TestNG Listener Class as Below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},'public class ExtentListener implements ITestListener, ISuiteListener {\n    ExtentReports extent = ExtentReporterCls.ReportGenerator();\n    ExtentTest test;\n    ExtentTest node;\n    private ByteArrayOutputStream request = new ByteArrayOutputStream();\n    private  ByteArrayOutputStream response = new ByteArrayOutputStream();\n    private PrintStream requestVar = new PrintStream(request,true);\n    private PrintStream responseVar = new PrintStream(response,true);\n\n    private static final ThreadLocal<ExtentTest> LocalThread = new ThreadLocal<ExtentTest>();\n\n    public void logInfo(String message)\n    {\n        LocalThread.get().info(message);\n    }\n\n    public void logJsoninfo(String json)\n    {\n        LocalThread.get().info(MarkupHelper.createCodeBlock(json, CodeLanguage.JSON));\n    }\n\n    public void logReqAndResponse(String json1,String json2)\n    {\n        LocalThread.get().info(MarkupHelper.createCodeBlocks(new String[]{json1, json2}));\n    }\n\n    @Override\n    public void onTestStart(ITestResult result) {\n        node = test.createNode(result.getMethod().getMethodName());\n        LocalThread.set(node);\n    }\n\n    @Override\n    public void onTestSuccess(ITestResult result) {\n        LocalThread.get().log(Status.PASS,"------------TEST CASE PASSED------------");\n        LocalThread.get().info(MarkupHelper.createCodeBlocks(new String[]{request.toString().trim(),response.toString().trim()}));\n    }\n\n    @Override\n    public void onTestFailure(ITestResult result) {\n        LocalThread.get().info(MarkupHelper.createCodeBlocks(new String[]{request.toString().trim(), response.toString().trim()}));\n        LocalThread.get().fail(result.getThrowable());\n    }\n\n    @Override\n    public void onTestSkipped(ITestResult result) {\n        LocalThread.get().log(Status.INFO,"------------TEST CASE SKIPPED------------");\n        LocalThread.get().skip(result.getThrowable());\n\n    }\n\n    @Override\n    public void onStart(ITestContext context) {\n\n        RestAssured.filters(new RequestLoggingFilter(LogDetail.ALL,requestVar),new ResponseLoggingFilter(LogDetail.ALL,responseVar));\n        test= extent.createTest(context.getName());\n    }\n\n    @SneakyThrows\n    @Override\n    public void onFinish(ITestContext context) {\n        extent.flush();\n    }\n}\n')),(0,a.kt)("p",null,"From the above TestNG Listener class we are initializing two types of Variables.\nByteArrayOutPutStream\nPrintArrayStream"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"},"    private ByteArrayOutputStream request = new ByteArrayOutputStream();\n    private  ByteArrayOutputStream response = new ByteArrayOutputStream();\n    private PrintStream requestVar = new PrintStream(request,true);\n    private PrintStream responseVar = new PrintStream(response,true);\n")),(0,a.kt)("p",null,"And in OnStart Method we are defining the RestAssured LoggingLevel. by Using RestAssured.Filters and RequestLoggingFiler"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Java"}," public void onStart(ITestContext context) {\n\n        RestAssured.filters(new RequestLoggingFilter(LogDetail.ALL,requestVar),new ResponseLoggingFilter(LogDetail.ALL,responseVar));\n        test= extent.createTest(context.getName());\n    }\n\n")),(0,a.kt)("p",null,"Add the Above Listener to your TestNG xml and check the Report. Your Report will look like below."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(4133).Z})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(8468).Z})),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(6117).Z})))}c.isMDXComponent=!0},155:function(e,t,n){t.Z=n.p+"assets/images/1-3a0fedf67ea3b974f5d2b77daf589a31.png"},4133:function(e,t,n){t.Z=n.p+"assets/images/2-9eff194188b171cfe8710b7eba026ec6.png"},8468:function(e,t,n){t.Z=n.p+"assets/images/3-e87199719fa5b4eabb441032e18230b9.png"},6117:function(e,t,n){t.Z=n.p+"assets/images/4-2259ca28f46a3ac761f06718b3f70f81.png"}}]);